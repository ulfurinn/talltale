<.simple_form :let={f} for={@changeset} phx-change={@change_action} phx-submit={@submit_action}>
  <%= Phoenix.HTML.Form.hidden_inputs_for(f) %>
  <input type="hidden" name={f[:deck_id].name} value={f[:deck_id].value} />
  <.input field={f[:slug]} label="Slug" autocomplete="off" phx-debounce="blur" />
  <.input field={f[:title]} label="Title" autocomplete="off" phx-debounce="blur" />
  <.input
    field={f[:frequency]}
    type="number"
    label="Frequency"
    autocomplete="off"
    phx-debounce="blur"
  />
  <.input field={f[:condition]} label="Condition" autocomplete="off" phx-debounce="blur" />
  <div>
    <.label>Effects</.label>
    <div class="grid grid-cols-[auto,minmax(0,1fr),auto] gap-1">
      <.inputs_for :let={effect} field={f[:effect]}>
        <input type="hidden" name={f[:effect_order].name <> "[]"} value={effect.index} />
        <.input
          type="select"
          field={effect[:type]}
          value={effect[:type].value || Talltale.Editor.Effect.type(effect.data)}
          prompt="Select a type"
          options={effect_type_options()}
        />
        <div>
          <.effect_block
            effect={effect}
            type={effect[:type].value || Talltale.Editor.Effect.type(effect.data)}
          />
        </div>
        <.toggle field={effect[:delete]}>
          <:off><.icon name="hero-trash" /> delete</:off>
          <:on><.icon name="hero-arrow-path" /> restore</:on>
        </.toggle>
      </.inputs_for>
    </div>
    <.toggle
      field={f[:effect_order]}
      value={Enum.count(f[:effect].value)}
      multiple={true}
      checked={false}
      class="mb-2"
    >
      <:off><.icon name="hero-plus-circle" /> add effect</:off>
    </.toggle>
  </div>
  <.button>Save</.button>
</.simple_form>
